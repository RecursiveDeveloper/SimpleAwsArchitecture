trigger:
  branches:
    include:
    - main
  paths:
    exclude:
    - azure-pipeline*.yml

parameters:
- name: StackAction
  displayName: StackAction
  type: string
  default: Deploy
  values:
  - Deploy
  - Destroy
- name: regionName
  displayName: regionName
  type: string
  default: 'us-east-1'

pool:
  vmImage: ubuntu-latest

variables:
  VpcStackName: 'VpcStack'
  SecurityGroupStackName: 'SgStack'
  AlbStackName: 'AlbStack'
  IamStackName: 'IamStack'
  S3BucketStackName: 'S3Stack'
  AsgStackName: 'AsgStack'

  S3BucketName: 'simpleawsarchitecture-artifacts'

jobs:
- ${{ if eq(parameters.StackAction, 'Deploy') }}:
  - job: Deploy
    displayName: Deploy Simple architecture VPC, SGs, ALB and ASG
    steps:
    - task: CloudFormationCreateOrUpdateStack@1
      name: DeployS3BucketStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(S3BucketStackName)
        templateSource: 'file'
        templateFile: '$(Build.Repository.LocalPath)/templates/template-s3.yml'
        templateParametersSource: 'inline'
        templateParameters: |
          - ParameterKey: S3BucketName
            ParameterValue: $(S3BucketName)

    - task: S3Upload@1
      name: UploadInstallers
      inputs:
        awsCredentials: 'Iac'
        regionName: 'us-east-1'
        bucketName: $(S3BucketStackName)
        sourceFolder: '$(Build.Repository.LocalPath)/installers'
        globExpressions: '**'

    - task: CloudFormationCreateOrUpdateStack@1
      name: DeployVpCStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(VpcStackName)
        templateSource: 'file'
        templateFile: '$(Build.Repository.LocalPath)/templates/template-vpc.yml'
        templateParametersSource: 'file'

    - task: CloudFormationCreateOrUpdateStack@1
      name: DeploySecurityGroupStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(SecurityGroupStackName)
        templateSource: 'file'
        templateFile: '$(Build.Repository.LocalPath)/templates/template-sg.yml'
        templateParametersSource: 'inline'
        templateParameters: |
          - ParameterKey: VpcStackName
            ParameterValue: $(VpcStackName)

    - task: CloudFormationCreateOrUpdateStack@1
      name: DeployALBStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(AlbStackName)
        templateSource: 'file'
        templateFile: '$(Build.Repository.LocalPath)/templates/template-alb.yml'
        templateParametersSource: 'inline'
        templateParameters: |
          - ParameterKey: VpcStackName
            ParameterValue: $(VpcStackName)
          - ParameterKey: SecurityGroupStackName
            ParameterValue: $(SecurityGroupStackName)

    - task: CloudFormationCreateOrUpdateStack@1
      name: DeployIAMStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(IamStackName)
        templateSource: 'file'
        templateFile: '$(Build.Repository.LocalPath)/templates/template-iam.yml'
        templateParametersSource: 'file'

    - task: CloudFormationCreateOrUpdateStack@1
      name: DeployASGStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(AsgStackName)
        templateSource: 'file'
        templateFile: '$(Build.Repository.LocalPath)/templates/template-asg.yml'
        templateParametersSource: 'inline'
        templateParameters: |
          - ParameterKey: VpcStackName
            ParameterValue: $(VpcStackName)
          - ParameterKey: SecurityGroupStackName
            ParameterValue: $(SecurityGroupStackName)
          - ParameterKey: AlbStackName
            ParameterValue: $(AlbStackName)
          - ParameterKey: IamStackName
            ParameterValue: $(IamStackName)

- ${{ if eq(parameters.StackAction, 'Destroy') }}:
  - job: Destroy
    displayName: Destroy Simple architecture VPC, SGs, ALB and ASG
    steps:
    - task: CloudFormationDeleteStack@1
      name: DestroyASGStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(AsgStackName)

    - task: CloudFormationDeleteStack@1
      name: DestroyALBStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(AlbStackName)

    - task: CloudFormationDeleteStack@1
      name: DestroySecurityGroupStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(SecurityGroupStackName)

    - task: CloudFormationDeleteStack@1
      name: DestroyIAMStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(IamStackName)

    - task: CloudFormationDeleteStack@1
      name: DestroyVpCStack
      inputs:
        awsCredentials: 'Iac'
        regionName: '${{ parameters.regionName }}'
        stackName: $(VpcStackName)
