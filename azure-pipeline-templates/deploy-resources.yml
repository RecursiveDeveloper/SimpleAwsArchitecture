parameters:
  - name: iacTemplatesPath
    type: string
  - name: StackAction
    type: string
  - name: regionName
    type: string
  - name: S3BucketStackName
    type: string
  - name: VpcStackName
    type: string
  - name: SecurityGroupStackName
    type: string
  - name: AlbStackName
    type: string
  - name: IamStackName
    type: string
  - name: AsgStackName
    type: string
  - name: S3BucketName
    type: string

jobs:
  - job: Deploy
    dependsOn: ManualValidation
    condition: succeeded()
    displayName: Deploy Simple architecture VPC, SGs, ALB and ASG
    steps:
      - task: CloudFormationCreateOrUpdateStack@1
        name: DeployS3BucketStack
        inputs:
          awsCredentials: 'Iac'
          regionName: '${{ parameters.regionName }}'
          stackName: $(S3BucketStackName)
          templateSource: 'file'
          templateFile: '$(iacTemplatesPath)/template-s3.yml'
          templateParametersSource: 'inline'
          templateParameters: |
            - ParameterKey: S3BucketName
              ParameterValue: $(S3BucketName)

      - task: S3Upload@1
        name: UploadInstallers
        inputs:
          awsCredentials: 'Iac'
          regionName: '${{ parameters.regionName }}'
          bucketName: $(S3BucketName)
          sourceFolder: '$(Build.Repository.LocalPath)/installers'
          globExpressions: '**'

      - task: CloudFormationCreateOrUpdateStack@1
        name: DeployIAMStack
        inputs:
          awsCredentials: 'Iac'
          regionName: '${{ parameters.regionName }}'
          stackName: $(IamStackName)
          templateSource: 'file'
          templateFile: '$(iacTemplatesPath)/template-iam.yml'
          templateParametersSource: 'inline'
          templateParameters: |
            - ParameterKey: S3BucketStackName
              ParameterValue: $(S3BucketStackName)

      - task: CloudFormationCreateOrUpdateStack@1
        name: DeployVpCStack
        inputs:
          awsCredentials: 'Iac'
          regionName: '${{ parameters.regionName }}'
          stackName: $(VpcStackName)
          templateSource: 'file'
          templateFile: '$(iacTemplatesPath)/template-vpc.yml'
          templateParametersSource: 'file'

      - task: CloudFormationCreateOrUpdateStack@1
        name: DeploySecurityGroupStack
        inputs:
          awsCredentials: 'Iac'
          regionName: '${{ parameters.regionName }}'
          stackName: $(SecurityGroupStackName)
          templateSource: 'file'
          templateFile: '$(iacTemplatesPath)/template-sg.yml'
          templateParametersSource: 'inline'
          templateParameters: |
            - ParameterKey: VpcStackName
              ParameterValue: $(VpcStackName)

      - task: CloudFormationCreateOrUpdateStack@1
        name: DeployALBStack
        inputs:
          awsCredentials: 'Iac'
          regionName: '${{ parameters.regionName }}'
          stackName: $(AlbStackName)
          templateSource: 'file'
          templateFile: '$(iacTemplatesPath)/template-alb.yml'
          templateParametersSource: 'inline'
          templateParameters: |
            - ParameterKey: VpcStackName
              ParameterValue: $(VpcStackName)
            - ParameterKey: SecurityGroupStackName
              ParameterValue: $(SecurityGroupStackName)

      - task: CloudFormationCreateOrUpdateStack@1
        name: DeployASGStack
        inputs:
          awsCredentials: 'Iac'
          regionName: '${{ parameters.regionName }}'
          stackName: $(AsgStackName)
          templateSource: 'file'
          templateFile: '$(iacTemplatesPath)/template-asg.yml'
          templateParametersSource: 'inline'
          templateParameters: |
            - ParameterKey: VpcStackName
              ParameterValue: $(VpcStackName)
            - ParameterKey: SecurityGroupStackName
              ParameterValue: $(SecurityGroupStackName)
            - ParameterKey: AlbStackName
              ParameterValue: $(AlbStackName)
            - ParameterKey: IamStackName
              ParameterValue: $(IamStackName)
            - ParameterKey: S3BucketName
              ParameterValue: $(S3BucketName)
